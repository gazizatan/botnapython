import telebot
from telebot import types
import base64

class BeautyBot:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token)

    def main_menu_markup(self):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        dry_button = types.KeyboardButton("–°—É—Ö–æ–π —Ç–∏–ø –∫–æ–∂–∏")
        oily_button = types.KeyboardButton("–ñ–∏—Ä–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏")
        normal_button = types.KeyboardButton("–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏")
        combination_button = types.KeyboardButton("–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏")
        markup.row(dry_button, oily_button, normal_button, combination_button)
        return markup

    def back_to_main_menu_markup(self):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home_button = types.KeyboardButton("–î–æ–º–æ–π")
        back_button = types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –∫–æ–∂–∏")
        markup.row(home_button)
        markup.row(back_button)
        return markup

    def recommendation_markup(self):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        recommendations = [
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å—É—Ö–æ–π –∫–æ–∂–∏",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∂–∏—Ä–Ω–æ–π –∫–æ–∂–∏",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –∫–æ–∂–∏",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–∂–∏"
        ]
        markup.add(*[types.KeyboardButton(recommendation) for recommendation in recommendations])
        return markup

    def start(self):
        @self.bot.message_handler(commands=['start', 'help'])
        def send_welcome(message):
            welcome_message = ("–ü—Ä–∏–≤–µ—Ç, –∫—Ä–∞—Å–æ—Ç–∫–∞!\n"
                               "–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∫—Ä–∞—Å–∏–≤–µ–µ –∏ —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –≤ —Å–µ–±–µ. "
                               "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏–ø –∫–æ–∂–∏, —á—Ç–æ–±—ã —è –º–æ–≥ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É üíÖ")
            self.bot.reply_to(message, welcome_message, reply_markup=self.main_menu_markup())

        @self.bot.message_handler(commands=['cancel'])
        def cancel_operation(message):
            self.bot.send_message(message.chat.id, "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: ", reply_markup=self.main_menu_markup())


        @self.bot.message_handler(func=lambda message: True)
        def handle_skin_type(message):
            skin_type = message.text.lower()
            descriptions = {
                '—Å—É—Ö–æ–π —Ç–∏–ø –∫–æ–∂–∏': "–°—É—Ö–æ–π —Ç–∏–ø –∫–æ–∂–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è. –ö–æ–∂–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —à–µ–ª—É—à–∏—Ç—å—Å—è, –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π. \n —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /cancel",
                '–∂–∏—Ä–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏': "–ñ–∏—Ä–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –∏–∑–±—ã—Ç–æ—á–Ω—ã–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–∂–Ω–æ–≥–æ —Å–∞–ª–∞, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–∂—É –±–ª–µ—Å—Ç—è—â–µ–π –∏ —Å–∫–ª–æ–Ω–Ω–æ–π –∫ –ø–æ—è–≤–ª–µ–Ω–∏—é —É–≥—Ä–µ–π –∏ —á–µ—Ä–Ω—ã—Ö —Ç–æ—á–µ–∫.\n —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /cancel",
                '–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏': "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏ –∏–º–µ–µ—Ç –∑–¥–æ—Ä–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å–µ–±—É–º–∞ –∏ –≤–ª–∞–≥–∏. –ö–æ–∂–∞ –≤—ã–≥–ª—è–¥–∏—Ç —É—Ö–æ–∂–µ–Ω–Ω–æ–π, –≥–ª–∞–¥–∫–æ–π –∏ —É–ø—Ä—É–≥–æ–π.\n —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /cancel",
                '–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏': "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–∂–∏ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —á–µ—Ä—Ç—ã —Å—É—Ö–æ–π –∏ –∂–∏—Ä–Ω–æ–π –∫–æ–∂–∏. –û–±—ã—á–Ω–æ –ª–æ–±, –Ω–æ—Å –∏ –ø–æ–¥–±–æ—Ä–æ–¥–æ–∫ (T-–∑–æ–Ω–∞) –∂–∏—Ä–Ω—ã–µ, –∞ —â–µ–∫–∏ –±–æ–ª–µ–µ —Å—É—Ö–∏–µ.\n —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /cancel"
            }

            if skin_type in descriptions:
                markup = self.back_to_main_menu_markup()
                self.bot.reply_to(message, f"–¢—ã –≤—ã–±—Ä–∞–ª–∞ {skin_type}.\n\n{descriptions[skin_type]}\n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:", reply_markup=self.recommendation_markup())
            elif message.text == "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –∫–æ–∂–∏":
                self.bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏–ø –∫–æ–∂–∏:", reply_markup=self.main_menu_markup())
            elif message.text.startswith("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è"):
                recommendation_type = message.text.split(" ")[2].lower()
                recommendation_text = f"–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è {recommendation_type} \n —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /cancel"
                if recommendation_type == "—Å—É—Ö–æ–π":
                    with open("/Users/gazizatanirbergen/PycharmProjects/–Ω–æ–≤—ã–π –±–æ—Ç –±—å—é—Ç–∏/.venv/lib/dry.jpg", "rb") as a:
                        self.bot.send_photo(message.chat.id, photo=a, caption=recommendation_text)
                elif recommendation_type == "–∂–∏—Ä–Ω–æ–π":
                    with open("/Users/gazizatanirbergen/PycharmProjects/–Ω–æ–≤—ã–π –±–æ—Ç –±—å—é—Ç–∏/.venv/lib/oily.jpeg", "rb") as b:
                        self.bot.send_photo(message.chat.id, photo=b, caption=recommendation_text)
                elif recommendation_type == "–Ω–æ—Ä–º–∞–ª—å–Ω–æ–π":
                    with open("/Users/gazizatanirbergen/PycharmProjects/–Ω–æ–≤—ã–π –±–æ—Ç –±—å—é—Ç–∏/.venv/lib/dry.jpg", "rb") as c:
                        self.bot.send_photo(message.chat.id, photo=c, caption=recommendation_text)
                elif recommendation_type == "–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π":
                    with open("/Users/gazizatanirbergen/PycharmProjects/–Ω–æ–≤—ã–π –±–æ—Ç –±—å—é—Ç–∏/.venv/lib/dry.jpg", "rb") as d:
                        self.bot.send_photo(message.chat.id, photo=d, caption=recommendation_text)
            else:
                self.bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –∫–æ–∂–∏ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")

        self.bot.infinity_polling()

if __name__ == "__main__":
    token = "7163957184:AAFiXVesSVqC9LIa6FhbiQBkY74rdHV7n3Y"
    beauty_bot = BeautyBot(token)
    beauty_bot.start()
